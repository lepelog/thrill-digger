{"version":3,"sources":["native/build/index.js","native/build/index_bg.js","../node_modules/webpack/buildin/harmony-module.js"],"names":["__wbg_set_wasm","wasm","val","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","cachedInt32Memory0","getInt32Memory0","Int32Array","WASM_VECTOR_LEN","create_solver","retptr","__wbindgen_add_to_stack_pointer","r0","r1","SolverWrapper","__wrap","do_rng_calls","count","this","__wbg_ptr","__destroy_into_raw","__wbg_solverwrapper_free","hole","content","solverwrapper_set_hole","solverwrapper_calculate_probabilities_with_pregenerated","slot","typ","solverwrapper_get_a_probability","solverwrapper_get_possible_rng_values_count","solverwrapper_reset_possible_loops","loop_idx","set_possible","solverwrapper_set_possible_loop","possible_loops_out","ptr0","arg","malloc","set","passArray8ToWasm0","__wbindgen_malloc","len0","solverwrapper_get_possible_loops","solverwrapper_get_total_loop_count","solverwrapper_cache_boards","solverwrapper_get_width","solverwrapper_get_height","solverwrapper_get_hole_count","Object","create","prototype","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbindgen_copy_to_typed_array","arg2","byteOffset","__wbindgen_throw","Error","exports","originalModule","webpackPolyfill","children","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"static/js/3.96a7720b.chunk.js","sourcesContent":["import * as wasm from \"./index_bg.wasm\";\nimport { __wbg_set_wasm } from \"./index_bg.js\";\n__wbg_set_wasm(wasm);\nexport * from \"./index_bg.js\";\n","let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @returns {SolverWrapper}\n*/\nexport function create_solver() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.create_solver(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return SolverWrapper.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {number} count\n* @returns {number}\n*/\nexport function do_rng_calls(count) {\n    const ret = wasm.do_rng_calls(count);\n    return ret >>> 0;\n}\n\n/**\n*/\nexport class SolverWrapper {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(SolverWrapper.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_solverwrapper_free(ptr);\n    }\n    /**\n    * @param {number} hole\n    * @param {number} content\n    */\n    set_hole(hole, content) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.solverwrapper_set_hole(retptr, this.__wbg_ptr, hole, content);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    */\n    calculate_probabilities_with_pregenerated() {\n        wasm.solverwrapper_calculate_probabilities_with_pregenerated(this.__wbg_ptr);\n    }\n    /**\n    * @param {number} slot\n    * @param {number} typ\n    * @returns {number}\n    */\n    get_a_probability(slot, typ) {\n        const ret = wasm.solverwrapper_get_a_probability(this.__wbg_ptr, slot, typ);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_possible_rng_values_count() {\n        const ret = wasm.solverwrapper_get_possible_rng_values_count(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    reset_possible_loops() {\n        wasm.solverwrapper_reset_possible_loops(this.__wbg_ptr);\n    }\n    /**\n    * @param {number} loop_idx\n    * @param {boolean} set_possible\n    */\n    set_possible_loop(loop_idx, set_possible) {\n        wasm.solverwrapper_set_possible_loop(this.__wbg_ptr, loop_idx, set_possible);\n    }\n    /**\n    * @param {Uint8Array} possible_loops_out\n    */\n    get_possible_loops(possible_loops_out) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passArray8ToWasm0(possible_loops_out, wasm.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.solverwrapper_get_possible_loops(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(possible_loops_out));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    get_total_loop_count() {\n        const ret = wasm.solverwrapper_get_total_loop_count(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    cache_boards() {\n        wasm.solverwrapper_cache_boards(this.__wbg_ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get_width() {\n        const ret = wasm.solverwrapper_get_width(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_height() {\n        const ret = wasm.solverwrapper_get_height(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_hole_count() {\n        const ret = wasm.solverwrapper_get_hole_count(this.__wbg_ptr);\n        return ret;\n    }\n}\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_copy_to_typed_array(arg0, arg1, arg2) {\n    new Uint8Array(getObject(arg2).buffer, getObject(arg2).byteOffset, getObject(arg2).byteLength).set(getArrayU8FromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}